plugins {
    id 'org.springframework.boot' version '2.3.1.RELEASE' apply false
    id 'io.spring.dependency-management' version '1.0.9.RELEASE' apply false
    id 'java'
}

ext {
    springBootVersion = '2.3.1.RELEASE'
    mybatisPlusBootStarterVersion = '3.3.2'
    guavaVersion = '29.0-jre'
    alibabaDruidVersion = '1.1.22'
    log4jOverSlf4jVersion = '1.7.30'
    springDocOpenAPIVersion = '1.1.49'
    springDocOpenAPIUIVersion = '1.4.2'
    dubboVersion = '2.6.8'
    modelMapperVersion = '2.3.8'
    servicecombPackVersion = '0.6.0'
}

subprojects {
    group = 'com.zhanghh.wms'
    version = '${wmsVersion}'
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java'
    apply plugin: 'eclipse'

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        maven { url 'https://maven.aliyun.com/repository/public' }
        mavenCentral()
        maven { url "https://repo.spring.io/libs-release" }
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }

    dependencies {
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
        }
        dependencies {
            dependency "com.baomidou:mybatis-plus-boot-starter:${mybatisPlusBootStarterVersion}"
            dependency "com.baomidou:mybatis-plus-generator:${mybatisPlusBootStarterVersion}"
            dependency "com.google.guava:guava:${guavaVersion}"
            dependency "com.alibaba:druid:${alibabaDruidVersion}"
            dependency "com.alibaba:druid-spring-boot-starter:${alibabaDruidVersion}"
            dependency "org.slf4j:log4j-over-slf4j:${log4jOverSlf4jVersion}"
            dependency "org.springdoc:springdoc-openapi-core:${springDocOpenAPIVersion}"
            dependency "org.springdoc:springdoc-openapi-ui:${springDocOpenAPIUIVersion}"
            dependency "com.alibaba:dubbo:${dubboVersion}"
            dependency "org.modelmapper:modelmapper:${modelMapperVersion}"
            dependency "org.apache.servicecomb.pack:omega-spring-starter:${servicecombPackVersion}"
            dependency "org.apache.servicecomb.pack:omega-transport-resttemplate:${servicecombPackVersion}"
            dependency "org.apache.servicecomb.pack:omega-transport-dubbo:${servicecombPackVersion}"
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }

    test {
        useJUnitPlatform()
    }
}
